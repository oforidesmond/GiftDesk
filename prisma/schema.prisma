generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int         @id @default(autoincrement())
  username      String      @unique
  password      String      // Hashed with bcrypt
  role          Role        @default(EVENT_OWNER)
  phone         String?
  expiresAt     DateTime?
  createdBy     User?       @relation("CreatedUsers", fields: [createdById], references: [id], onDelete: Cascade)
  createdById   Int?
  createdUsers  User[]      @relation("CreatedUsers")
  events        Event[]
  donations     Donation[]
  assignedEvents Event[]    @relation("AssignedEvents")
  pushSubscription Json?     // For PWA push notifications
  smsTemplates  SMSTemplate[] @relation("SMSTemplateCreatedBy") 
  sentCredentials Boolean   @default(false)
  userCredential  UserCredential?
  @@index([role])
  createdAt DateTime @default(now())
}

model UserCredential {
  id        Int      @id @default(autoincrement())
  userId    Int      @unique
  user      User     @relation(fields: [userId], references: [id])
  password  String   // Plain-text password
  createdAt DateTime @default(now())
}

model Event {
  id            Int         @id @default(autoincrement())
  title          String
  location      String?
  date          DateTime?
  type          String
  createdBy     User        @relation(fields: [createdById], references: [id])
  createdById   Int
  donations     Donation[]
  assignees     User[]      @relation("AssignedEvents")
  smsTemplates  SMSTemplate[]
  createdAt   DateTime @default(now())
  @@index([createdById])
  @@index([date])
  @@index([type])
}

model Donation {
  id            Int         @id @default(autoincrement())
  amount        Float?
  donorName     String
  donorPhone    String?
  giftItem      String?     
  notes         String?     
  eventId       Int
  event         Event       @relation(fields: [eventId], references: [id])
  createdBy     User        @relation(fields: [createdById], references: [id])
  createdById   Int
  createdAt     DateTime    @default(now())
  status        String      @default("PENDING")
  @@index([eventId])
  @@index([createdById])
  @@index([status])     
  @@index([createdAt])   
  @@index([eventId, status])
}

model SMSTemplate {
  id            Int         @id @default(autoincrement())
  eventId       Int
  event         Event       @relation(fields: [eventId], references: [id])
  content       String
  createdBy     User        @relation("SMSTemplateCreatedBy", fields: [createdById], references: [id]) // Name the relation
  createdById   Int
  createdAt   DateTime @default(now())
  @@index([eventId])
  @@index([createdById])
}

enum Role {
  ADMIN
  EVENT_OWNER
  MC
  DESK_ATTENDEE
}